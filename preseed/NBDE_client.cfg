#### Contents of the preconfiguration file ( for bookworm ) Network Bound Disk Encryption
# MBR boot !! no EFI
# HDD minimum 8Gb, memory 1Gb 
# Asume gateway 192.168.1.1, tang-server 192.168.1.10, web-server 192.168.1.5
# dhcp-server enabled, IP 192.168.1.2 is not in the dhcp range

# you should paste a ssh key at the end to enable remote decryption on the first boot. IP during boot is set to 192.168.1.2
# After boot dhcp is used and hostname nbde1 is set
# after 1ste ssh login a script will ask to change all (root/luks) passwords please follow these steps to secure your system.
# this is a sample setup using minimal packages there is no desktop installed but all is available trough apt 
# boot: install auto=true preseed/url=http://192.168.1.5/NBDE_client.cfg net.ifnames=0 biosdevname=0 IP=192.168.1.2::192.168.1.1:255.255.255.0:nbde1:eth0 --- hostname=ndbe1

### Localization
d-i debian-installer/locale string nl_NL
d-i debian-installer/language string nl
d-i debian-installer/country string NL
d-i debian-installer/locale string nl_NL.UTF-8
d-i localechooser/supported-locales multiselect en_US.UTF-8, nl_NL.UTF-8

# Keyboard selection.
d-i keyboard-configuration/xkb-keymap select us

### Network configuration
d-i netcfg/choose_interface select auto
d-i netcfg/get_hostname string nbde1
d-i netcfg/get_domain string home.lan
d-i netcfg/hostname string nbde1
d-i netcfg/wireless_wep string

### Mirror settings
d-i mirror/country string Netherlands
d-i mirror/http/hostname string ftp.nl.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

# Suite to install.
d-i mirror/suite string bookworm
# Suite to use for loading installer components (optional).
d-i mirror/udeb/suite string bookworm

### Account setup
# Skip creation of a root account (normal user account will be able to
# use sudo).
#d-i passwd/root-login boolean false
# Alternatively, to skip creation of a normal user account.
d-i passwd/make-user boolean false

# Root password, either in clear text
#d-i passwd/root-password password r00tme
#d-i passwd/root-password-again password r00tme
# or encrypted using a crypt(3)  hash.
# This string "U6aMy0wojraho" represends 'Enter' thus a empty password
d-i passwd/root-password-crypted password U6aMy0wojraho

# To create a normal user account.
#d-i passwd/user-fullname string Debian User
#d-i passwd/username string debian
#d-i passwd/user-password-crypted password U6aMy0wojraho
#d-i passwd/user-default-groups string audio cdrom video

### Clock and time zone setup
# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean false
d-i time/zone string Europe/Amsterdam
d-i clock-setup/ntp boolean true

### Partitioning
d-i partman-auto/disk string /dev/sda
d-i partman-auto/method string crypto
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-auto-lvm/guided_size string 7900 MB
d-i partman-auto-crypto/erase_disks boolean false
d-i partman-auto-lvm/new_vg_name string crypt
d-i partman-auto/choose_recipe select root-encrypted
# 700mb /boot 2Gb swap encrypted lvm minimal 5Gb / encrypted lvm max total left space set 8000 to -1 
d-i partman-auto/expert_recipe string                         \
      root-encrypted ::                                       \
              700 700 1200 ext2                               \
                      $primary{ } $bootable{ }                \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext2 }    \
                      mountpoint{ /boot }                     \
              .                                               \
              1000 2000 1000 linux-swap                       \
                      $lvmok{ } lv_name{ swap }               \
                      in_vg { crypt }                         \
                      $primary{ }                             \
                      method{ swap } format{ }                \
              .                                               \
              5000 10000 8000 ext4                            \
                      $lvmok{ } lv_name{ root }               \
                      in_vg { crypt }                         \
                      $primary{ }                             \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      mountpoint{ / }                         \
              .
              2000 1000 -1 \
                      method { keep } \
              .
d-i partman-crypto/passphrase password r00tme123
d-i partman-crypto/passphrase-again password r00tme123
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman-basicfilesystems/no_swap boolean false

### Apt setup
d-i apt-setup/non-free boolean true
d-i apt-setup/contrib boolean true

### Package selection
tasksel tasksel/first multiselect minimal

# Individual additional packages to install
d-i pkgsel/include string curl aptitude net-tools lsb-release rsync wget autofs fuse \
dropbear-initramfs cryptsetup-initramfs openssh-server clevis clevis-luks clevis-initramfs

d-i pkgsel/upgrade select none
popularity-contest popularity-contest/participate boolean false
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean false
d-i grub-installer/bootdev string /dev/sda

# Grub
d-i debian-installer/add-kernel-opts string net.ifnames=0 biosdevname=0

### Finishing up the installation
# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

#### Advanced options
### Running custom commands during the installation
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preconfiguration file like this one. Only use preconfiguration files from
# trusted locations! To drive that home, and because it's generally useful,
# here's a way to run any shell command you'd like inside the installer,
# automatically.

# !!!!  You must put in your own ssh-key   !!!!
# This part sets up dropbear-initramfs with a static ip Adjust to your own network
d-i preseed/late_command string \
  mkdir -p -m 700 /target/root/.ssh; \
  echo "ssh-ed25519 AAAAC3NzaC1lZDI1NTE!!!PUT_IN_YOUR_OWN_KEY!!!VaYJnBoZgG2VVDSjO7Gd" > /target/root/.ssh/authorized_keys; \
  in-target chown --recursive root:root /root/.ssh; \
  in-target chmod 0644 /root/.ssh/authorized_keys; \
  echo "ssh-ed25519 AAAAC3NzaC1lZDI1NTE!!!PUT_IN_YOUR_OWN_KEY!!!VaYJnBoZgG2VVDSjO7Gd" > /target/etc/dropbear-initramfs/authorized_keys; \
  echo 'PasswordAuthentication no' >> /target/etc/ssh/sshd_config.d/setup; \
  echo 'PermitRootLogin prohibit-password' >> /target/etc/ssh/sshd_config.d/setup; \
  in-target systemctl enable --now sshd; \
  echo 'DROPBEAR_OPTIONS="-I 300 -j -k -p 22 -s -c /bin/cryptroot-unlock"' >> /target/etc/dropbear-initramfs/config; \
  echo 'IP=192.168.1.2::192.168.1.1:255.255.255.0:init:eth0' >> /target/etc/initramfs-tools/initramfs.conf; \
  echo -ne "\nEncrypted client with remote boot unlocker\n\nLog in with username \"root\" no password needed just enter\nDo this on tty2 or thru ssh to finish tang key setup\nCurrent tty: \l\n" > /target/etc/issue; \
  echo -ne "\nif [[ \"\$(tty)\" == \"/dev/tty2\" || \"\$(tty)\" == \"/dev/pts/0\" ]]; then\n  if [[ -e \"protect.me\" ]]; then\n    chmod +x protect.me\n    ./protect.me\n  fi\nfi\n\n" >> /target/root/.profile; \
  echo -ne "#!/bin/bash\n" >> /target/root/protect.me; \
  echo -ne "echo \"Were going to set a root password you might not want that right now to do it manually later use the command  \"passwd\"  to change it.\"\n" >> /target/root/protect.me; \
  echo -ne "read -p \"Change ROOT password now? [Y/n]: \" ans\npin=\${ans:-Y}\nif [[ \$pin =~ [yY] ]];then\npasswd\nfi\n\n" >> /target/root/protect.me; \
  echo -ne "echo\necho \"Next we ask the tang server for a key...please wait\"\necho\necho r00tme123|clevis luks bind -y -k - -d /dev/sda5 tang '{\"url\":\"http://192.168.1.10\"}'\n\n" >> /target/root/protect.me; \
  echo -ne "echo\necho \"Next we change the password for the Disk Encryption used as backup when tang is not available.\"\necho \"Enter the current password \"r00tme123\" and make a new one.\"\necho\ncryptsetup luksChangeKey /dev/sda5\n\n" >> /target/root/protect.me; \
  echo -ne "\n\nFirst we are going to set the root password to secure this account\n\nThen we change the slot \"0\" password used to Unlock the encryption\n\n" >> /target/etc/motd; \
  in-target update-initramfs -u;
